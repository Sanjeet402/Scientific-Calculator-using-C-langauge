Sidebar.js

import React, { useState } from "react";
import { Link, useLocation } from "react-router-dom";
import icon from "./icon.png"; // Adjust path if needed

const Sidebar = ({ isOpen, toggleSidebar }) => {
  const [paymentsOpen, setPaymentsOpen] = useState(false);
  const [approvalsOpen, setApprovalsOpen] = useState(false);
  const location = useLocation();

  const togglePayments = () => setPaymentsOpen(!paymentsOpen);
  const toggleApprovals = () => setApprovalsOpen(!approvalsOpen);
  const isActive = (path) => location.pathname === path;
  const handleLinkClick = () => toggleSidebar();
  const handlePaymentLinkClick = () => {
    setPaymentsOpen(false);
    toggleSidebar();
  };
  const handleApprovalLinkClick = () => {
    setApprovalsOpen(false);
    toggleSidebar();
  };

  return (
    <>
      {/* Styles and sidebar code; move the <style> element outside for global CSS if desired */}
      <nav className="sidebar-custom">
        {/* ... Sidebar JSX as you wrote ... */}
      </nav>
    </>
  );
};

export default Sidebar;

Navbar.js

// Navbar.js
import React from "react";
import { Link } from "react-router-dom";
import icon from "./icon.png"; // Adjust path

const Navbar = ({
  sidebarOpen,
  setSidebarOpen,
  profileDropdownOpen,
  setProfileDropdownOpen,
  handleLogout,
}) => (
  <>
    {/* Styles for Navbar could be moved to a separate CSS */}
    <nav className="navbar navbar-expand-lg navbar-light navbar-custom fixed-top">
      {/* ... Navbar JSX as you wrote ... */}
    </nav>
  </>
);

export default Navbar;


HomePage.js

// HomePage.js
import React, { useState } from "react";
import Sidebar from "./Sidebar";
import Navbar from "./Navbar";

export default function HomePage({ children }) {
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [profileDropdownOpen, setProfileDropdownOpen] = useState(false);

  const handleLogout = () => {
    setProfileDropdownOpen(false);
    // Add your logout logic here
  };

  return (
    <>
      <Navbar
        sidebarOpen={sidebarOpen}
        setSidebarOpen={setSidebarOpen}
        profileDropdownOpen={profileDropdownOpen}
        setProfileDropdownOpen={setProfileDropdownOpen}
        handleLogout={handleLogout}
      />
      <div style={{ display: 'flex', marginTop: '56px' }}>
        <Sidebar isOpen={sidebarOpen} toggleSidebar={() => setSidebarOpen(!sidebarOpen)} />
        <main className="main-content-shifted" style={{ flex: 1, background: '#f8f9fa' }}>
          <div className="px-4 px-md-5 py-4">
            {children}
          </div>
        </main>
      </div>
    </>
  );
}





